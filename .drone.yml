kind: pipeline
type: docker
name: default


# volumes:
#   - name: docker_socket
#     host:
#       path: /var/run/docker.sock

steps:

  
  - name: clone-repository
    image: alpine/git
    commands:
      # - cd /root/testDrone/testdrone
      - git clone https://github.com/darkClaw921/testDrone.git
      

  
  # - name: build-and-restart-myservice-container
  #   image: docker/compose:1.29.2
  #   commands:
  #     - cd testDrone
  #     - ls
  #     # - cd testdrone
  #     # - ls
  #     - docker-compose -f docker-compose.yml build myservice  # Сборка образа для нужного сервиса
  #     - docker-compose -f docker-compose.yml up -d myservice  # Запуск контейнера для нужного сервиса

  # - name: build_and_run_container
  #   image: docker
  #   volumes_from:
  #     - source: docker_socket
  #       target: /var/run/docker.sock
  #   commands:
  #     - cd testDrone
  #     - docker build -t my_image2 .
  #     - docker run -d my_image2
  
  - name: test
    image: python:3.12
    commands:
      # - pip install -r requirements.txt
      - ls
      # - cd testDrone
      # - ls
      - cd testdrone  
      - pip3 install poetry
      - pip3 install --upgrade setuptools
      - poetry install
      # - poetry run python3 main.py
      - poetry list
      # - python3 main.py

  - name: send-webhook
    image: plugins/http
    settings:
      method: POST
      url: $DEPLOY_URL/webhook2  # Замените на фактический адрес вашего Flask-приложения
    depends_on:
      - clone-repository   
      - test





  # - name: git-pull-and-restart-container
  #   image: docker:stable
  #   commands:
  #     - ls
  #     - pwd
  #     - cd testDrone/testdrone
  #     # - git pull  # Получение изменений из pull request
  #     - ls
  #     - pwd
  #     - python3 testdrone/main.py
      # - docker-compose down  # Остановка контейнера
      # - docker-compose up -d --build  # Запуск контейнера с пересборкой